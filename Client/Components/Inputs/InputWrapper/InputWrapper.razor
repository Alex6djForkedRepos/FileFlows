@namespace FileFlows.Client.Components.Inputs

@if(Input?.Visible == false)
{
    return;
}
@{
    bool invalid = string.IsNullOrEmpty(Input?.ErrorMessage) == false;

}
<div class="row @(NoSpacing ? "mt-0" : "") @(invalid ? "error" : "") @(Input?.HideLabel == true ? "hide-label": "") @(Input?.Disabled == true ? "disabled" : "")">
    <div class="input-label">
        @if (string.IsNullOrEmpty(Input?.Label) == false)
        {
            <label>@Input.Label</label>
        }
    </div>

    <div class="input-value">
        @ChildContent
    </div>
</div>


@if (invalid && Input?.Disabled != true)
{
    <div class="row mt-0 @(invalid ? "error" : "")">
        <div class="input-label"></div>
        <div class="input-value">
            <span class="error-text">@Input.ErrorMessage</span>
        </div>
    </div>
}
@if (string.IsNullOrEmpty(HelpHtml) == false)
{
    <div class="row mt-0 @(invalid ? "error" : "") @(Input?.Disabled == true ? "disabled" : "") @(Input?.HideLabel == true ? "hide-label": "")">
        <div class="input-label"></div>
        <div class="input-value">
            <span class="help-text">
                @((MarkupString)HelpHtml)
            </span>
        </div>
    </div>
}