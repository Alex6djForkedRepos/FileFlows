@namespace FileFlows.Client.Components.Dashboard


<div class="dashboard-wrapper">
    <div class="dashboard">

        
        @if (Workers?.Any() == true)
        {
            for (int i = 0; i < Workers.Count; i++)
            {
                var worker = Workers[i];
                <div class="worker-wrapper portlet">
                    <div class="chart-wrapper">
                        <div class="chart chart-@i"></div>
                    </div>
                    <div class="worker-info">
                        <span class="label-value current">
                            <span class="label">@lblNode</span>
                            <span class="value">@worker.NodeName</span>
                        </span>
                        <span class="label-value current">
                            <span class="label">@lblFile</span>
                            <span class="value">@worker.RelativeFile</span>
                        </span>
                        <span class="label-value working-file">
                            <span class="label">@lblWorkingFile</span>
                            <span class="value">@worker.WorkingFile</span>
                        </span>
                        <span class="label-value library">
                            <span class="label">@lblLibrary</span>
                            <span class="value">@worker.Library.Name</span>
                        </span>
                        <span class="label-value current-step">
                            <span class="label">@lblCurrentStep</span>
                            <span class="value">@Helpers.FlowHelper.FormatLabel(worker.CurrentPartName)</span>
                        </span>
                        <span class="label-value processing-time">
                            <span class="label">@lblProcessingTime</span>
                            <span class="value">@worker.ProcessingTime.ToString(@"hh\:mm\:ss")</span>
                        </span>
                        <div class="actions-wrapper">
                            <div class="actions">
                                <button @onclick="() => LogClicked(worker)">@lblLog</button>
                                <button @onclick="() => CancelClicked(worker)">@lblCancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }

        <CascadingValue Value="this" IsFixed="true">
            <FileFlows.Client.Components.Dashboard.ShrinkageBar />

            <FileFlows.Client.Components.Dashboard.LibraryFilesSummary />
            <FileFlows.Client.Components.Dashboard.LibraryFilesSummary Completed=@true />
        </CascadingValue>

        <div class="spacer"></div>
    </div>
</div>