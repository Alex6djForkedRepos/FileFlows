@using FileFlows.Plugin
@namespace FileFlows.Client.Components

@if (Visible)
{
    <div class="flow-properties">
        <span class="title">
            <h2>
                <i class="fas fa-times" title="Close" @onclick="() => Close()" />
                Flow Properties
            </h2>
            <button @onclick=@OpenHelp>@lblHelp</button>
        </span>
        
        <FlowTabs>
            <FlowTab Title="General">
                @if (Flow.Type != FlowType.SubFlow)
                {
                    <InputTextArea @bind-Value="@Flow.Properties.Description" Label="Pages.Flow.Fields.Description"></InputTextArea>
                    <InputText @bind-Value="@Flow.Properties.Author" Label="Pages.Flow.Fields.Author"></InputText>
                    <InputArray @bind-Value="@Flow.Properties.Tags" Label="Pages.Flow.Fields.Tags"/>
                    <InputText @bind-Value="@Flow.Properties.MinimumVersion" Label="Pages.Flow.Fields.MinimumVersion"/>
                    <InputKeyValue @bind-Value="@FlowVariables" Label="Pages.Flow.Fields.Variables" />
                }
                else
                {
                    <InputTextLabel Label=@lblSubFlowHelp Value=@lblSubFlowHelp HideLabel=@true Pre="true" Formatter="Markdown"></InputTextLabel>
                    <hr />
                    <InputTextArea @bind-Value="@Flow.Properties.Description" Label="Pages.Flow.Fields.SubFlowDescription"></InputTextArea>
                    <InputNumber TItem="int" @bind-Value="@Flow.Properties.Outputs" Label="Pages.Flow.Fields.Outputs"></InputNumber>
                }
            </FlowTab>
            <FlowTab Title="Fields">
                <div class="field-wrapper">
                    <div class="field-list">
                        @if (Fields.Any())
                        {
                            @foreach (var field in Fields)
                            {
                                <div @onclick="() => Edit(field)" class="field @(field == Editing ? "selected" : string.Empty)">
                                    <div class="input">
                                        <div class="name">
                                            @if (field.Type == FlowFieldType.OutputPath)
                                            {
                                                field.Name = "Output_Path";
                                                <input type="text" @bind-value=@field.Name readonly />   
                                            }
                                            else
                                            {
                                                <input type="text" @bind-value=@field.Name/>
                                            }
                                        </div>
                                        <div class="type">
                                            <select @bind="@field.Type">
                                                <option value=@FlowFieldType.String>String</option>
                                                <option value=@FlowFieldType.Number>Number</option>
                                                <option value=@FlowFieldType.Boolean>Boolean</option>
                                                <option value=@FlowFieldType.Directory>Directory</option>
                                                <option value=@FlowFieldType.Select>Select</option>
                                                <option value=@FlowFieldType.OutputPath>Output Path</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="actions">
                                        <i class="fas fa-trash" title="Delete" @onclick="() => Delete(field)"></i>
                                        <i class="fas fa-caret-up" title="Move Up" @onclick="() => Move(field, true)"></i>
                                        <i class="fas fa-caret-down" title="Move Down" @onclick="() => Move(field, false)"></i>
                                    </div>
                                </div>
                            }
                        }
                        <button class="btn" @onclick=Add>
                            <i class="fas fa-plus"></i>
                            Add Field
                        </button>
                    </div>

                    @if (Editing != null)
                    {
                        <div class="field-editor">
                            <div class="head">
                                <h2>
                                    <i class="fas fa-times" title="Close" @onclick="() => Edit(null)"/>
                                    @Editing.Name Properties
                                </h2>
                            </div>
                            <div class="content">
                                
                                <FlowTabs>
                                    <FlowTab Title="General">
                                        <InputText @bind-Value="@Editing.Description" Label="Pages.Flow.Fields.Field.Description"></InputText>
                                        <InputText @bind-Value="@Editing.FlowElementField" Label="Pages.Flow.Fields.Field.FlowElementField"></InputText>

                                        @if (Editing.Type == FlowFieldType.String || Editing.Type == FlowFieldType.Directory)
                                        {
                                            <InputSwitch @bind-Value="@Editing.Required" Label="Pages.Flow.Fields.Field.Required"></InputSwitch>
                                            <InputText @bind-Value="@DefaultValueString" Label="Pages.Flow.Fields.Field.Default"></InputText>
                                        }
                                        else if (Editing.Type == FlowFieldType.Boolean)
                                        {
                                            <InputSwitch @bind-Value="@DefaultValueBoolean" Label="Pages.Flow.Fields.Field.Default"></InputSwitch>
                                        }
                                        else if (Editing.Type == FlowFieldType.Number)
                                        {
                                            <InputNumber TItem="Int32" @bind-Value="@DefaultValueNumber" Label="Pages.Flow.Fields.Field.Default"></InputNumber>
                                        }
                                        else if (Editing.Type == FlowFieldType.Select)
                                        {
                                            <InputArray @bind-Value="@Editing.Options" Label="Pages.Flow.Fields.Field.Options"></InputArray>
                                            <InputText @bind-Value="@DefaultValueString" Label="Pages.Flow.Fields.Field.Default"></InputText>
                                        }
                                        else if (Editing.Type == FlowFieldType.OutputPath)
                                        {
                                            <InputArray @bind-Value="@Editing.Options" Label="Pages.Flow.Fields.Field.DeleteIfEmpty"></InputArray>
                                        }
                                        
                                    </FlowTab>
                                    <FlowTab Title="Conditions">
                                        <InputText @bind-Value="@Editing.IfName" Label="Pages.Flow.Fields.Field.IfName"></InputText>
                                        <InputText @bind-Value="@Editing.IfValue" Label="Pages.Flow.Fields.Field.IfValue"></InputText>
                                        <InputSwitch @bind-Value="@Editing.IfNot" Label="Pages.Flow.Fields.Field.IfNot"></InputSwitch>
                                    </FlowTab>
                                </FlowTabs>
                            </div>
                        </div>
                    }
                </div>
            </FlowTab>
        </FlowTabs>
        
        
    </div>
}