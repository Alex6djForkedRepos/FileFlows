@namespace FileFlows.Client.Pages
@using FileFlows.Shared.Models
@using FileFlows.Shared.Formatters
@using System.ComponentModel.DataAnnotations
@using FileFlows.Client.Components.Dashboard;

@page "/"

<PageView ClassName="fix-width">

    <Head>
        @if (App.Instance.FileFlowsSystem.Licensed)
        {
            <div class="dashboard-selector">
                <select @bind="ActiveDashboardUid">
                    @if (Dashboards?.Any() == true)
                    {
                        @foreach (var dashboard in Dashboards.OrderBy(x => x.Label))
                        {
                            <option value=@dashboard.Value>@dashboard.Label</option>
                        }
                    }
                </select>
                <button @onclick=@AddDashboard><i class="fas fa-plus"></i></button>
                <button disabled=@(DashboardDeletable == false) @onclick=@DeleteDashboard><i class="fas fa-trash"></i></button>
            </div>
            
            <button class="btn" @onclick=@AddPortlet>@lblAddPortlet</button>
        }
        @if (App.Instance.IsMobile == false)
        {
            <PauseResume />
        }
    </Head>

    <Body>

    <CascadingValue Value="this" IsFixed="true">
        @if ((int)ConfiguredStatus < 3)
        {
            <InitialConfigWelcome />
        }
        else if (App.Instance.FileFlowsSystem.Licensed && ActiveDashboardUid != Guid.Empty)
        {
            <CustomDashboard ActiveDashboardUid=@ActiveDashboardUid />
        }
        else
        {
            <BasicDashboard />
        }
    </CascadingValue>
    </Body>
</PageView>