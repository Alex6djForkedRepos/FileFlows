@namespace FileFlows.Client.Pages
@using FileFlows.Shared.Models
@using Humanizer
@inherits ListPage<Guid, ProcessingNode>

@page "/nodes"

<PageView ClassName="flex">

    <Head>
        @if (App.Instance.IsMobile == false)
        {
            <a class="btn btn-download-node" target="_blank" href="@DownloadUrl">@lblDownloadNode</a>
        }
    </Head>

    <Body>
        <FlowTable @ref="Table" Data="@Data" TItem="ProcessingNode" Selection="SelectionMode.Multiple" TableIdentifier="Nodes"
            DoubleClick="@OnDoubleClick">
            <ToolBar>            
                <FlowTableButton Clicked=Edit SelectedOne="true" Icon="fas fa-edit" Label="Labels.Edit" />
                <FlowTableButton Clicked=Delete SelectedOneOrMore="true" Icon="fas fa-trash" Label="Labels.Delete" />    
                <FlowTableButtonSeparator />            
                <FlowTableHelpButton  HelpUrl="nodes" />
            </ToolBar>

            <Columns>
                <FlowTableColumn TItem="ProcessingNode" NoHeight="true">
                    <Header>
                        @Globals.lblName
                    </Header>
                    <Cell Context="item">
                        <div class="node-wrapper @(item.Enabled == false ? "disabled" : "")">
                            @{
                                string statusIcon = "status-ok";
                                string statusTitle = lblRunning;
                                
                                if (item.Address != FileFlowsServer && item.LastSeen < DateTime.UtcNow.AddMinutes(-10))
                                {
                                    statusIcon = "status-error";
                                    statusTitle = lblDisconnected;
                                }
                                else if (item.Address != FileFlowsServer && item.LastSeen < DateTime.UtcNow.AddMinutes(-5))
                                {
                                    statusIcon = "status-warning";
                                    statusTitle = lblPossiblyDisconnected;
                                }
                            }    
                            <div class="node-icon @statusIcon" title="@statusTitle">
                                @if (item.OperatingSystem == OperatingSystemType.Mac)
                                {
                                    <i class="fab fa-apple"></i>
                                }
                                else if (item.OperatingSystem == OperatingSystemType.Docker)
                                {
                                    <i class="fab fa-docker"></i>
                                }
                                else if (item.OperatingSystem == OperatingSystemType.Windows)
                                {
                                    <i class="fab fa-windows"></i>
                                }
                                else if (item.OperatingSystem == OperatingSystemType.Linux)
                                {
                                    <i class="fab fa-linux"></i>
                                }
                                <div class="architecture">@item.Architecture</div>
                            </div>
                            
                            <div class="info">
                                <div class="name">
                                    @item.Name
                                </div>
                                <div class="sub-info">
                                    <div>
                                        <span class="label">@lblAddress</span>
                                        <span class="value">@(item.Address != FileFlowsServer ? item.Address : lblInternal)</span>
                                    </div>
                                    <div>
                                        <span class="label">@lblRunners</span>
                                        <span class="value">@item.FlowRunners</span>
                                    </div>
                                    <div>
                                        <span class="label">@lblVersion</span>
                                        <span class="value">@item.Version</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="enabled">
                                <FlowSwitch Value="@item.Enabled" ValueChanged="@(args => { item.Enabled = args; Enable(args, item); })"/>
                            </div>
                            
                    
                            @if (item.Status == ProcessingNodeStatus.VersionMismatch)
                            {
                                <span class="version-mismatch" title="@lblUpgradeRequiredHint">@lblUpgradeRequired</span>
                            }
                        </div>
                    </Cell>
                </FlowTableColumn>
            </Columns>
        </FlowTable>

    </Body>

</PageView>