@namespace FileFlows.Client.Pages
@page "/log"
@using FileFlows.Plugin
@using FileFlows.Client.Helpers

<PageView FullWidth=true>
    <Head>
        @if (App.Instance.FileFlowsSystem.ExternalDatabase)
        {   
            <a class="btn" @onclick=@SearchPane.ToggleSearch>@lblSearch</a>
        }
        else
        {
            <select class="btn-select" @onchange="ChangeLogType">
                <option value=@((int)LogType.Error)>Error</option>
                <option value=@((int)LogType.Warning)>Warning</option>
                <option selected value=@((int)LogType.Info)>Info</option>
                <option value=@((int)LogType.Debug)>Debug</option>
            </select>
        }
        @if (String.IsNullOrEmpty(DownloadUrl) == false)
        {
            <a href="@DownloadUrl" class="btn" target="_blank"><span>@lblDownload</span></a>
        }
    </Head>
    <Body>
    <div class="log html-log">
        @((MarkupString)LogText)
    </div>
    </Body>

</PageView>

<SearchPane @ref=SearchPane Searched=@Search>
    <div class="search-field input">
        <div class="label">Date</div>
        <div class="value">
            <DateRangePicker OnRangeSelect=@OnRangeSelect Ranges=@DateRangeHelper.LiveDateRanges TimePicker="true" TimePicker24Hour="true" DateFormat="@($"d MMM HH:mm")">
                  <PickerTemplate>
                        <div id="@context.Id" @onclick="context.Toggle" class="daterangeinput">
                            <i class="fas fa-calendar"></i>
                            <span>
                                @if ((context.TStartDate == null && context.TEndDate == null) ||
                                     (context.TStartDate == DateRangeHelper.LiveStart && context.TEndDate == DateRangeHelper.LiveEnd) )
                                {
                                    <span>Live Data</span>
                                }
                                else
                                {
                                    <span>
                                        @context.FormattedRange
                                    </span>
                                }
                            </span>
                            <i class="fas fa-chevron-down float-right"></i>
                        </div>
                    </PickerTemplate>
            </DateRangePicker>
        </div>
    </div>
    <div class="search-field input">
        <div class="label">Source</div>
        <div class="value">
            <select @bind="SearchModel.ClientUid">
                <option value="">Server</option>
                @foreach (var node in Nodes.OrderBy(x => x.Value))
                {
                    <option value=@node.Key>@node.Value</option>
                }
            </select>
        </div>
    </div>
    <div class="search-field input">
        <div class="label">Type</div>
        <div class="value">
            <select @bind="SearchModel.Type">
                <option>Any</option>
                <option value=@LogType.Error>Error</option>
                <option value=@LogType.Warning>Warning</option>
                <option value=@LogType.Info>Info</option>
                <option value=@LogType.Debug>Debug</option>
            </select>
        </div>
    </div>
    <div class="search-field input">
        <div class="label">
            <FlowSwitch @bind-Value=@SearchModel.TypeIncludeHigherSeverity />
            Include Higher Severity
        </div>
    </div>
    <div class="search-field input">
        <div class="label">Text</div>
        <div class="value">
            <input type="text" @bind="SearchModel.Message">
        </div>
    </div>
</SearchPane>