@namespace FileFlows.Client.Pages

@page "/flows/{uid:guid}"

@{
    bool isNew = Model == null || Model.Uid == System.Guid.Empty;
}

<PageView FullWidth=@true title="@Title">
    <HeadLeft>
        <input class="flow-name" type="text" @bind-value="@Name" autocomplete="off" placeholder="@lblName" />
    </HeadLeft>

    <Head>
        <RadzenButton class="save-button" BusyText="@lblSaving" IsBusy=@IsSaving Click=@Save Text="@lblSave" />
        <RadzenButton Click=@Close Text="@lblClose" />
    </Head>

    <Body>
        <div class="flow-container">
            <div class="flow-elements">
                <ul id="flow-elements-available">
                    @if (Available != null)
                    {
                        @foreach (var grp in Available.GroupBy(x => x.Group))
                        {
                            <li class="group">@Helpers.FlowHelper.FormatLabel(grp.Key)</li>
                            foreach (var ele in grp)
                            {
                                <li id="@ele.Uid" draggable="true" class="flow-element draggable @ele.Type"
                        ondragstart="ffFlow.Mouse.dragElementStart(event)">
                                    <div class="icon-wrapper"><span class="icon @ele.Icon"></span></div>
                                    @Helpers.FlowHelper.FormatLabel(ele.Name)
                                </li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="flow-parts" id="flow-parts">
                <canvas width="8000" height="4000" tabindex="1"></canvas>
            </div>
        </div>
    </Body>
</PageView>