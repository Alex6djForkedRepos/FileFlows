.flow-container {
    display:flex;
    flex-direction: row-reverse;
    position: absolute;
    left:0;
    right:0;
    bottom:0;
    top:0;
    background:rgba(var(--color-rgb), 0.03);
}

.flow-name {
    flex-grow:1;
    margin-left:0.5rem;
    background:transparent !important;
    border-bottom:solid 1px var(--accent) !important;
    &:focus {
        outline:unset !important;
    }
}

canvas {
    position:absolute;
    top:0;
    right:0;
    bottom:0;
    left:0;
}

.flow-elements {
    width:20vw;
    min-width:12rem;
    max-width:18rem;
    border-left: 1px solid var(--border-color);
    overflow-y:auto;
    ul {
        list-style: none;
        margin:0;
        padding:0;
    }
}

.flow-parts {
    background:var(--darkest);
    flex-grow:1;
    position: relative;
    overflow: auto;
}

::deep .flow-part, .flow-element {
    text-align: center;
    border-radius: 0.75rem;
    min-width:12rem;
    border:solid 3px transparent;
    &.Logic {
        border-color:var(--flow-logic);
    }
    &.Input {
        border-color:var(--flow-input);
    }
    &.Output {
        border-color:var(--flow-output);
    }
    &.Process {
        border-color:var(--flow-process);
    }
}
.flow-element {
    padding: 0.25rem 0.25rem;
    margin: 0.5rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    position: relative;
    padding-left: 2.25rem;

    .icon-wrapper {
        width: 2rem;
        border-right: solid 3px;
        margin-right: 0.25rem;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        .icon {
            padding-top:3px;
            display: inline-block;
            vertical-align: middle;
        }
    }

    &.Logic .icon-wrapper {
        border-color: var(--flow-logic);
    }

    &.Input .icon-wrapper {
        border-color: var(--flow-input);
    }

    &.Output .icon-wrapper {
        border-color: var(--flow-output);
    }

    &.Process .icon-wrapper {
        border-color: var(--flow-process);
    }

    .label {
        flex-grow: 1;
    }
}

::deep .flow-part {
    &.selected {
        border-color:var(--accent) !important;
        background-image: linear-gradient(rgba(var(--accent-rgb), 0.3), rgba(var(--accent-rgb), 0.3)) !important;
        background-color: unset;
        box-shadow: 0 3px 10px rgba(var(--accent-rgb), 0.1);
    }
}

.group {
    padding: .25rem 0;
    margin: .5rem;
    text-align: center;
}
.flow-element + .group {
    border-top:1px solid var(--border-color);
    margin-top:1.25rem;
}

::deep .flow-part {
    display: flex;
    flex-direction: row;
    outline: unset !important;

    .icon-wrapper {
        width: 2rem;
        border-right: solid 3px;
        margin: 0;
        padding-left: 0.25rem;
        display: flex;

        .icon {
            margin: auto;
        }
    }

    .name {
        flex-grow: 1;
        margin: auto 0.5rem;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .draggable {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }

    * {
        user-select: none;
    }

    &.vertical {
        height: 4rem;

        &.size-1, &.size-2, &.size-3 {
            width: 12rem;
        }

        @for $i from 4 through 20 {
            &.size-#{$i} {
                width: calc(12rem + #{$i}rem);
            }
        }
    }

    &:not(.vertical) {
        &.size-1 {
            height: 2.5rem;
        }

        @for $i from 2 through 20 {
            &.size-#{$i} {
                height: calc(#{$i} * 2rem);
            }
        }
    }

    &.Logic:not(.selected) {
        .icon-wrapper, .input > div, .output > div {
            border-color: var(--flow-logic) !important;
        }

        .connected > div {
            background-color: var(--flow-logic) !important;
        }
    }

    &.Input:not(.selected) {
        .icon-wrapper, .input > div, .output > div {
            border-color: var(--flow-input) !important;
        }

        .connected > div {
            background-color: var(--flow-input) !important;
        }
    }

    &.Output:not(.selected) {
        .icon-wrapper, .input > div, .output > div {
            border-color: var(--flow-output) !important;
        }

        .connected > div {
            background-color: var(--flow-output) !important;
        }
    }

    &.Process:not(.selected) {
        .icon-wrapper, .input > div, .output > div {
            border-color: var(--flow-process) !important;
        }

        .connected > div {
            background-color: var(--flow-process) !important;
        }
    }

    &.selected {
        .icon-wrapper, .input > div, .output > div {
            border-color: var(--accent) !important;
        }

        .connected > div {
            background-color: var(--accent) !important;
        }
    }

    .inputs {
        left: -0.65rem;
    }

    .outputs {
        right: -0.65rem;
    }


    .inputs, .outputs {
        position: absolute;
        width: 1rem;
        top: 0;
        bottom: 0;
        display: flex;
        flex-direction: column;

        .input, .output {
            margin: auto;

            > div {
                width: 1rem;
                height: 1rem;
                margin: 0.5rem;
                border-radius: 0.25rem;
                background-color: var(--base);
                border: solid 2px;
            }
        }
    }

    &.vertical {
        .inputs, .outputs {
            top: -1rem;
            bottom: unset;
            left: 2rem;
            right: 0;
            flex-direction: row;
            width: unset;
        }

        .outputs {
            top: unset;
            bottom: -1rem;
        }
    }
}

::deep {
    .output > div:hover {
        cursor: crosshair;
    }

    .drawing-line .input > div:hover {
        cursor: crosshair;
    }

    .info-box {
        &::before {
            background: rgba(var(--accent-rgb), 0.3);
            content: ' ';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            border-top-right-radius: 54px;
            z-index: -1;
        }

        position: fixed;
        bottom: 10px;
        left: 250px;
        padding: 4px 20px 4px 8px;
        border-top: solid 3px var(--accent);
        border-right: solid 3px var(--accent);
        border-top-right-radius: 54px;
        background: var(--base);
        max-width: min(60rem, calc(90% - 250px - 21vw));
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        span + span {
            margin-left: 0.5rem;
        }

        br {
            display: inline;
            content: ' ';
        }
    }
}

@media screen and (max-width:850px)
{
    ::deep {
        .info-box {
            left: 0;
            max-width: 70%;
        }
    }
}