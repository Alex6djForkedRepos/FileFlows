@namespace FileFlow.Client.Pages
@using FileFlow.Shared.Models
@inherits ListPage<LibraryFile>

@page "/library-files"

<PageView>

    <Head>
    </Head>

    <Body>

        <div class="status-picker">
            @foreach (var status in Statuses)
            {
                <div class="status @status.Status @(status.Status == SelectedStatus ? "active" : "")"
                @onclick="() => SetSelected(status)">
                    @switch (status.Status)
                    {
                        case FileStatus.Unprocessed:
                            <span class=" icon far fa-hourglass"></span>
                            break;
                        case FileStatus.Processed:
                            <span class="icon far fa-check-circle"></span>
                            break;
                        case FileStatus.Processing:
                            <span class="icon fas fa-file-medical-alt"></span>
                            break;
                        case FileStatus.FlowNotFound:
                            <span class="icon fas fa-exclamation"></span>
                            break;
                        case FileStatus.ProcessingFailed:
                            <span class="icon far fa-times-circle"></span>
                            break;

                    }

                    <span class="count">@status.Count</span>
                    <span class="name">@status.Name</span>
                </div>
            }
        </div>

        <div class="page-table">
            <div class="table-toolbar">
                <button @onclick="@Edit" disabled="@(SelectedItems?.Count == 1 ? null : "disabled")"><span
                        class="fas fa-edit"></span>
                    @lblEdit</button>
                <button @onclick="@Delete" disabled="@(SelectedItems?.Any() == true ? null : "disabled")"><span
                        class="fas fa-trash"></span>
                    @lblDelete</button>
                <button @onclick="@Refresh"><span class="fas fa-sync-alt"></span> @lblRefresh</button>
            </div>
            @{
                bool paging = Data.Count > (DataGrid == null ? 250 : DataGrid.PageSize);
            }

            <RadzenDataGrid @ref="DataGrid" AllowFiltering="true" PageSizeOptions="@PageSizeOptions"
                RowDoubleClick=@RowDoubleClicked SelectionMode="DataGridSelectionMode.Multiple"
                @bind-Value=@SelectedItems AllowColumnResize="true" FilterMode="FilterMode.Advanced"
                AllowPaging="@paging" AllowSorting="true" Data="@Data" TItem="LibraryFile"
                LogicalFilterOperator="LogicalFilterOperator.Or">
                <Columns>
                    <RadzenDataGridColumn TItem="LibraryFile" Width="40px" Sortable="false" Filterable="false"
                        Frozen="true">
                        <HeaderTemplate>
                            <RadzenCheckBox TriState="false" TValue="bool"
                                Value="@(Data.Any(i => SelectedItems != null && SelectedItems.Contains(i)))"
                                Change="@(args => SelectedItems = args ? Data.ToList() : null)" />
                        </HeaderTemplate>
                        <Template Context="data">
                            <RadzenCheckBox TriState="false"
                                Value="@(SelectedItems != null && SelectedItems.Contains(data))" />
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="LibraryFile" Property="RelativePath" Title="Name" Width="20rem"
                        Frozen="true" />
                    <RadzenDataGridColumn TItem="LibraryFile" Property="Flow.Name" Title="Flow" Width="12rem" />
                    <RadzenDataGridColumn TItem="LibraryFile" Property="Library.Name" Title="Library" Width="12rem" />
                    <RadzenDataGridColumn TItem="LibraryFile" Property="ProcessingTime" Title="Time" Width="6rem"
                        FormatString="{0:hh\:mm\:ss}" Visible=@(SelectedStatus !=
                        FileFlow.Shared.Models.FileStatus.Unprocessed)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="LibraryFile" Property="OutputPath" Title="Output" Width="30rem"
                        Visible=@(SelectedStatus == FileFlow.Shared.Models.FileStatus.Processed) />
                </Columns>
            </RadzenDataGrid>
        </div>
    </Body>

</PageView>