.blocker {
  background: rgba(var(--base-rgb), 0.9);
  z-index: 1000;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  display: flex;
}
.blocker .blocker-indicator {
  margin: auto;
}
.blocker .blocker-spinner {
  margin: auto;
  --border-width: 16px;
  height: 100px;
  width: 100px;
  border-radius: 50%;
  /* 0.5px's are needed to avoid hard-stopping */
  --mask: radial-gradient(
    farthest-side,
    transparent calc(100% - var(--border-width) - 0.5px),
    #000 calc(100% - var(--border-width) + 0.5px)
  );
  -webkit-mask: var(--mask);
  mask: var(--mask);
  /* we're using two half linear-gradient which is masked by the radial-gradient */
  background: linear-gradient(to top, rgba(var(--accent-rgb), 1), rgba(var(--accent-rgb), 0.5)) 100% 0/50% 100% no-repeat, linear-gradient(rgba(var(--accent-rgb), 0.5) 50%, transparent 95%) 0 0/50% 100% no-repeat;
  animation: spin 1s linear infinite;
}
.blocker .blocker-message {
  color: var(--accent);
  border: solid 1px var(--accent);
  margin-top: 2rem;
  padding: 0.5rem 2rem;
  font-size: 0.75rem;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
input, textarea {
  background: var(--input-background) !important;
  border: var(--input-background) !important;
  color: var(--color) !important;
  border-radius: unset !important;
  border: solid 1px transparent !important;
}
input:focus, textarea:focus {
  outline: 1px solid var(--accent);
}

::placeholder {
  color: rgba(var(--color-rgb), 0.3) !important;
}

.error input, .error select {
  border-color: var(--accent) !important;
}

input[type=checkbox] {
  appearance: none;
  background-color: var(--base) !important;
  margin: 0;
  font: inherit;
  color: currentColor;
  width: 1.4rem;
  height: 1.4rem;
  border: 1px solid var(--input-background) !important;
  border-radius: 0.15em;
  transform: translateY(-0.075em);
  display: grid;
  place-content: center;
  position: relative;
  top: 7px;
  left: 3px;
}
input[type=checkbox]:checked:not([readonly]) {
  border-color: var(--accent) !important;
}

input[type=checkbox]::before {
  content: "";
  width: 0.65em;
  height: 0.65em;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  transform: scale(0);
  transform-origin: bottom left;
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em var(--accent);
  /* Windows High Contrast Mode */
  background-color: transparent;
}

input[type=checkbox][readonly]::before {
  box-shadow: inset 1em 1em var(--input-background);
}

input[type=checkbox]:checked::before {
  transform: scale(1);
}

input[type=checkbox]:focus {
  outline: max(2px, 0.15em) solid transparent;
  outline-offset: max(2px, 0.15em);
}

input[type=checkbox]:disabled {
  --form-control-color: var(--accent);
  color: var(--form-control-disabled);
  cursor: not-allowed;
}

button:not(.flowtable-button):not(.navbar-toggler) {
  font-size: 0.8rem !important;
  text-transform: uppercase;
  border-radius: unset !important;
  height: 2.1875rem;
  font-weight: normal;
  outline: none !important;
  line-height: initial;
  box-shadow: none;
  border-radius: unset !important;
  font-size: 0.8rem !important;
  text-transform: uppercase;
  border: solid 1px var(--accent);
  background-color: transparent;
  color: var(--color);
}
button:not(.flowtable-button):not(.navbar-toggler):hover:not(:disabled), button:not(.flowtable-button):not(.navbar-toggler):active:not(:disabled) {
  background-image: linear-gradient(rgba(var(--accent-rgb), 0.3), rgba(var(--accent-rgb), 0.3)) !important;
  box-shadow: inset 0 -3px 0 0 var(--accent) !important;
}
button:not(.flowtable-button):not(.navbar-toggler):disabled {
  border-color: var(--input-background);
  color: var(--input-background);
}

.flow-modal-background-overlay {
  z-index: 10 !important;
}

.flow-modal {
  z-index: 11;
  padding: 1rem;
}

@media screen and (min-width: 578.0001px) {
  .flow-modal {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    min-width: 20rem;
    box-shadow: 0 3px 10px rgba(var(--color-rgb), 0.1);
    background: rgba(var(--base-rgb), 0.9);
  }

  .flow-modal-footer {
    text-align: right;
  }
  .flow-modal-footer button {
    width: 6rem;
    padding: 0;
  }
}
@media screen and (max-width: 578px) {
  .flow-modal {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: var(--base);
  }

  .flow-modal-inner {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .flow-modal-body {
    flex-grow: 1;
    position: relative;
  }

  .flow-modal-footer {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
  }
  .flow-modal-footer button {
    flex-grow: 1;
    flex-basis: 0;
    margin: auto;
  }
  .flow-modal-footer button + button {
    margin-left: 1rem;
  }
}
.flow-modal-title {
  color: var(--accent);
}

.flow-modal-body {
  margin: 1rem 0;
}

@media screen and (max-width: 850px) {
  .pointer-add {
    display: none;
  }
}
@media screen and (min-width: 850px) {
  .pointer-add {
    position: fixed;
    top: 81px;
    left: 191px;
    width: 75px;
    background: var(--accent);
    height: 25px;
    line-height: 25px;
    margin-bottom: 30px;
    text-align: center;
    color: var(--color);
    animation: bounce 1.75s infinite;
    box-shadow: 0 3px 10px rgba(var(--accent-rgb), 0.2);
  }
  .pointer-add:before {
    content: "";
    position: absolute;
    right: -10px;
    top: 0;
    border-top: 12px solid transparent;
    border-bottom: 14px solid transparent;
    border-left: 10px solid var(--accent);
  }
}
@keyframes bounce {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-10px);
  }
  100% {
    transform: translateX(0);
  }
}
.flow-bar {
  flex-grow: 1;
  position: relative;
  margin: auto;
  border-radius: 0.5rem;
  overflow: hidden;
  background-color: var(--input-background);
  box-shadow: inset 0 3px 3px 3px rgba(0, 0, 0, 0.2);
}
.flow-bar > div {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
}
.flow-bar .bar-value {
  background: var(--accent);
  box-shadow: inset 0 5px rgba(255, 255, 255, 0.2);
  border-top-right-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}
.flow-bar.grew .bar-value {
  background: rgba(var(--color-rgb), 0.2);
}

@font-face {
  font-family: "Source Sans Pro";
  src: url("webfonts/SourceSansPro-Regular.woff") format("woff");
}
html {
  overflow: hidden;
}

@media screen and (max-width: 849.99px) {
  html, body, #app, .page {
    height: 100%;
  }
}
html, body {
  font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  font-weight: 400;
  color: var(--color) !important;
  background: var(--base) !important;
}

* {
  scrollbar-color: rgba(var(--accent-rgb), 0.5) var(--base);
  scrollbar-width: thin;
}

a, .btn-link {
  color: var(--accent) !important;
}

.btn-primary {
  color: var(--color);
  background-color: var(--primary);
  border-color: var(--primary);
}

.content {
  padding-top: 1.1rem;
}

.valid.modified:not([type=checkbox]):not(:focus) {
  outline: 1px solid var(--modified);
}

.invalid {
  outline: 1px solid var(--error);
}

.validation-message {
  color: var(--error);
}

#blazor-error-ui {
  background: var(--base);
  border-top: solid 1px rgba(var(--accent-rgb), 0.5);
  bottom: 0;
  box-shadow: 0 -1px 2px rgba(0, 0, 0, 0.2);
  display: none;
  left: 0;
  padding: 0.6rem 1.25rem 0.7rem 1.25rem;
  position: fixed;
  width: 100%;
  z-index: 1000;
}
#blazor-error-ui .blazor-error-ui-wrapper {
  display: flex;
  flex-direction: row;
}
#blazor-error-ui .errormessage {
  flex-grow: 1;
}
#blazor-error-ui .dismiss {
  margin-left: 1rem;
  cursor: pointer;
}

::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

::-webkit-scrollbar-track {
  background: var(--base) !important;
  border-radius: 0px;
}

::-webkit-scrollbar-thumb {
  border-radius: 0 !important;
}
::-webkit-scrollbar-thumb:not(:hover) {
  background: rgba(var(--accent-rgb), 0.5) !important;
}
::-webkit-scrollbar-thumb:hover {
  background: var(--accent) !important;
}

::-webkit-scrollbar-corner {
  background-color: var(--base) !important;
}

.draggable {
  cursor: grab;
}
.draggable:active {
  cursor: grabbing !important;
}
.draggable:hover {
  cursor: grab;
}

.dragging {
  cursor: grabbing;
}

.background-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2;
  background: rgba(var(--base-rgb), 0.7);
}

button .fas, button .far {
  width: 1rem;
}

.row {
  flex-wrap: nowrap !important;
}

#unsupported-browser, .update-available {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  line-height: 1.5rem;
  font-size: 1rem;
  background: var(--base);
  border-bottom: solid 1px var(--accent);
  color: var(--accent);
  z-index: 100;
  text-align: center;
  text-transform: uppercase;
  padding: 1rem;
  letter-spacing: 2px;
}
#unsupported-browser .dismiss, .update-available .dismiss {
  position: absolute;
  top: 1.25rem;
  right: 1.5rem;
  cursor: pointer;
  color: var(--accent);
}

.update-available {
  color: var(--color);
}

.flow-template-description {
  white-space: pre-wrap;
  margin-bottom: 1rem;
  font-size: 0.8rem;
  font-style: italic;
  color: var(--color-darkest);
  white-space: pre-wrap;
  margin-left: 14rem;
  margin-top: 0.25rem;
}

@media screen and (max-width: 576px) {
  .flow-template-description {
    margin-left: 0;
  }
}
hr {
  border-top-color: var(--border-color);
}
