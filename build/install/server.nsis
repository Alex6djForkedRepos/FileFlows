# define name of installer
!define MYSOURCE "../../temp"
OutFile "${MYSOURCE}/Server-Installer.exe"
!include sections.nsh
!include LogicLib.nsh
 
# define installation directory
InstallDir "$APPDATA\FileFlows"
Icon "../../icon.ico"
Name "FileFlows"
LicenseData "eula.rtf"
SetCompressor /SOLID lzma

# For removing Start Menu shortcut in Windows 7
RequestExecutionLevel user
;Version Information
LoadLanguageFile "${NSISDIR}\Contrib\Language files\English.nlf"

  VIProductVersion "0.6.0.1234"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductName" "FileFlows"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "CompanyName" "Reven"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "LegalCopyright" "Copyright FileFlows 2022"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "FileDescription" "FileFlows"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "FileVersion" "0.6.0"

;--------------------------------


!define SECTIONCOUNT 2 ; total -1
;SaveSections adds one bit to the given variable for each selected component
!macro SaveSections VAR
    StrCpy ${VAR} 0
    ${ForEach} $R0 ${SECTIONCOUNT} 0 - 1
        IntOp ${VAR} ${VAR} << 1
        ${If} ${SectionIsSelected} $R0
            ;${DEBUG} "Section $R0 checked"
            IntOp ${VAR} ${VAR} + 1
        ${EndIf}
    ${Next}
!macroend

Page license
Page directory
PageEx components
    PageCallbacks DummyFunc DummyFunc componentsLeave
PageExEnd
Page instfiles

UninstPage uninstConfirm
UninstPage instfiles



# start default section
Section !FileFlows
  SectionIn RO
SectionEnd


Section "Server" g1o1
    ServerInstall:

    IfFileExists $INSTDIR\ServerFileFlows.Server.dll 0 +3
        Delete "$INSTDIR\Server\FileFlows.Server.dll"
        IfErrors ServerAppRunning
 
        # set the installation directory as the destination for the following actions
        SetOutPath $INSTDIR\Server

        File /r "${MYSOURCE}/Server/FileFlows-Runner"
        File /r "${MYSOURCE}/Server/Plugins"
        File /r "${MYSOURCE}/Server/Nodes"
        File /r "${MYSOURCE}/Server/Templates"
        File /r "${MYSOURCE}/Server/wwwroot"
        File "${MYSOURCE}/Server/"
        
        SetOutPath $INSTDIR\Server\runtimes
        File /r "${MYSOURCE}/Server/runtimes/win*"
        SetOutPath $INSTDIR\Server
    
        # create the uninstaller
        WriteUninstaller "$INSTDIR\Server\uninstall.exe"

        #IfFileExists "$SMPROGRAMS\FileFlows" 0 EndIf
        CreateDirectory "$SMPROGRAMS\FileFlows"
        #EndIf:
    
        # create a shortcut named "new shortcut" in the start menu programs directory
        # point the new shortcut at the program uninstaller
        CreateShortcut "$SMPROGRAMS\FileFlows\FileFlows Uninstall.lnk" "$INSTDIR\Server\uninstall.exe"

        # create a shortcut named "new shortcut" in the start menu programs directory
        CreateShortcut "$SMPROGRAMS\FileFlows\FileFlows.lnk" "dotnet.exe"" FileFlows.Server.dll" "$INSTDIR\Server\icon.ico"

        ExecShell "" "$SMPROGRAMS\FileFlows\FileFlows.lnk"
        Goto ServerDone

    ServerAppRunning:
        MessageBox MB_RETRYCANCEL "FileFlows is currently running, please stop it and try again." IDCANCEL ServerDone
        Goto ServerInstall

    ServerDone:
SectionEnd

Section /o "Node" g1o2

    NodeInstall:

        IfFileExists $INSTDIR\FileFlows.Node.dll 0 +3
            Delete "$INSTDIR\FileFlows.Node.dll"
            IfErrors NodeAppRunning

        # set the installation directory as the destination for the following actions
        SetOutPath "$INSTDIR"
        File "${MYSOURCE}/Node/*.bat"

        SetOutPath $INSTDIR\Node

        File /r "${MYSOURCE}/Server/FileFlows-Runner"
        File "${MYSOURCE}/Node/Node/*"

        SetOutPath $INSTDIR\Node\runtimes
        File /r "${MYSOURCE}/Server/runtimes/win*"
        SetOutPath $INSTDIR\Node
    
        # create the uninstaller
        WriteUninstaller "$INSTDIR\Node\uninstall.exe"
    
        CreateDirectory "$SMPROGRAMS\FileFlows"

        WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileFlowsNode" "DisplayName" "FileFlows Node"
        WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileFlowsNode" "UninstallString" '"$INSTDIR\Node\uninstall.exe"'

        # create a shortcut named "new shortcut" in the start menu programs directory
        # point the new shortcut at the program uninstaller
        CreateShortcut "$SMPROGRAMS\FileFlows\FileFlows Node Uninstall.lnk" "$INSTDIR\Node\uninstall.exe"

        # create a shortcut named "new shortcut" in the start menu programs directory
        CreateShortcut "$SMPROGRAMS\FileFlows\FileFlows Node.lnk" "dotnet.exe"" FileFlows.Node.dll" "$INSTDIR\Node\icon.ico"

        ExecShell "" "$SMPROGRAMS\FileFlows\FileFlows Node.lnk"
        Goto NodeDone

    NodeAppRunning:
        MessageBox MB_RETRYCANCEL "FileFlows Node is currently running, please stop it and try again." IDCANCEL NodeDone
        Goto NodeInstall

    NodeDone:
SectionEnd
 
# uninstaller section start
Section "uninstall"
 
    Uninstall:
        # delete this file, if it fails the app is running
        IfFileExists $INSTDIR\Server\FileFlows.Server.dll 0 +3
            Delete "$INSTDIR\Server\FileFlows.Server.dll"
            IfErrors UninstallAppRunning
            
        IfFileExists $INSTDIR\Node\FileFlows.Node.dll 0 +3
            Delete "$INSTDIR\Node\FileFlows.Node.dll"
            IfErrors UninstallAppRunning

        DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileFlows"

        # Remove the links from the start menu
        RMDir /r "$INSTDIR\Server"       
        RMDir /r "$INSTDIR\Node"    
        RMDir /r "$SMPROGRAMS\FileFlows"
    
        # Delete the uninstaller
        Delete "$INSTDIR\Server\uninstaller.exe"
        Delete "$INSTDIR\Node\uninstaller.exe"

        MessageBox MB_YESNO|MB_ICONQUESTION "Would you like to remove all data?" IDNO UninstallDone
            RMDir /r "$INSTDIR"
        Goto UninstallDone

    UninstallAppRunning:
        MessageBox MB_RETRYCANCEL "FileFlows is currently running, please stop it and try again." IDCANCEL UninstallDone
        Goto Uninstall

    UninstallDone:
# uninstaller section end
SectionEnd


;--------------------------------

; Functions

; $1 stores the status of group 1
; $2 stores the status of group 2

Function .onInit

  StrCpy $1 ${g1o1} ; Group 1 - Option 1 is selected by default

FunctionEnd

Function .onSelChange

  !insertmacro StartRadioButtons $1
    !insertmacro RadioButton ${g1o1}
    !insertmacro RadioButton ${g1o2}
  !insertmacro EndRadioButtons

FunctionEnd


Function DummyFunc
FunctionEnd

Function componentsLeave
    !insertmacro SaveSections $2
    ${if} $2 = 0
        MessageBox MB_OK|MB_ICONEXCLAMATION "You must select a component to install" /sd IDOK
        Abort
    ${endif}
FunctionEnd